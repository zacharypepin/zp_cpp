#include <gtest/gtest.h>
#include "zp_cpp/math.hpp"

#include <cmath>
#include <string>

// =========================================================================================================================================
// =========================================================================================================================================
// NormalizeProducesUnitVector: Ensures normalize() returns a unit-length vector for non-zero input.
// =========================================================================================================================================
// =========================================================================================================================================
TEST(MathVecTest, NormalizeProducesUnitVector)
{
    zp::math::vec3 v{3.0f, 4.0f, 0.0f};
    zp::math::vec3 normalized = zp::math::normalize(v);

    float len                 = zp::math::length(normalized);
    EXPECT_NEAR(len, 1.0f, 1e-6f);
}

// =========================================================================================================================================
// =========================================================================================================================================
// LerpInterpolatesComponentWise: Confirms lerp() blends components independently.
// =========================================================================================================================================
// =========================================================================================================================================
TEST(MathVecTest, LerpInterpolatesComponentWise)
{
    zp::math::vec2 a{0.0f, 10.0f};
    zp::math::vec2 b{10.0f, 20.0f};

    zp::math::vec2 result = zp::math::lerp(a, b, 0.5f);

    EXPECT_FLOAT_EQ(result.x, 5.0f);
    EXPECT_FLOAT_EQ(result.y, 15.0f);
}

// =========================================================================================================================================
// =========================================================================================================================================
// ToStringMatchesExpectedFormat: Validates to_string() yields the canonical tuple format.
// =========================================================================================================================================
// =========================================================================================================================================
TEST(MathVecTest, ToStringMatchesExpectedFormat)
{
    zp::math::vec3 v{1.0f, 2.0f, 3.0f};
    std::string s = zp::math::to_string(v);

    EXPECT_EQ(s, "(1, 2, 3)");
}
