#include <gtest/gtest.h>
#include "zp_cpp/events.hpp"

// ====================================================================================================================
// ====================================================================================================================
// SubscribeAndTrigger: Validates subscribers receive payloads when triggered.
// ====================================================================================================================
// ====================================================================================================================
TEST(EventsTest, SubscribeAndTrigger)
{
    zp::Event<int> evt;
    int received = 0;

    evt.subscribe([&](int value) { received = value; });

    evt.trigger(42);
    EXPECT_EQ(received, 42);
}

// ====================================================================================================================
// ====================================================================================================================
// Unsubscribe: Validates removing a subscription stops callbacks from firing.
// ====================================================================================================================
// ====================================================================================================================
TEST(EventsTest, Unsubscribe)
{
    zp::Event<int> evt;
    int received    = 0;

    auto subscriber = [&](int value) { received = value; };
    evt.subscribe(subscriber);
    evt.unsubscribe(subscriber);

    evt.trigger(7);
    EXPECT_EQ(received, 0);
}

// ====================================================================================================================
// ====================================================================================================================
// VoidEventTrigger: Validates void events can be triggered without payloads.
// ====================================================================================================================
// ====================================================================================================================
TEST(EventsTest, VoidEventTrigger)
{
    zp::VoidEvent evt;
    bool called = false;

    evt.subscribe([&](zp::Void) { called = true; });

    evt.trigger({});
    EXPECT_TRUE(called);
}
