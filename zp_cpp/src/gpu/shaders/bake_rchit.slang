import rt_common;

// ===================================================================================================================
// ===================================================================================================================
// ===================================================================================================================
// ===================================================================================================================
struct MyAttributes
{
  BuiltInTriangleIntersectionAttributes intersect;
}

[shader("closesthit")]
void chit_main(inout Payload payload, in MyAttributes attr) {

	// ============================================================================================
	// ============================================================================================
	// ============================================================================================
	// ============================================================================================
	float2 bary = attr.intersect.barycentrics;
  	float3 barycentrics = float3(1 - bary.x - bary.y, bary.x, bary.y);

	// ============================================================================================
	// ============================================================================================
	// Position
	// ============================================================================================
	// ============================================================================================
	const float3 pos0 = HitTriangleVertexPosition(0);
	const float3 pos1 = HitTriangleVertexPosition(1);
	const float3 pos2 = HitTriangleVertexPosition(2);
	const float3 position = pos0 * barycentrics.x + pos1 * barycentrics.y + pos2 * barycentrics.z;

	const float3 ws_pos = float3(mul(ObjectToWorld3x4(), float4(position, 1.0)));

	// Normal
	const float3 geo_nrm = normalize(cross(pos1 - pos0, pos2 - pos0));
	float3 ws_geo_nrm = normalize(mul(geo_nrm, WorldToObject3x4()).xyz);

	// ============================================================================================
	// ============================================================================================
	// ============================================================================================
	// ============================================================================================
	payload.didHit = true;
	payload.hitInfo.hitPoint = ws_pos;
	payload.hitInfo.N =
		HitKind() == HIT_KIND_TRIANGLE_FRONT_FACE
			? ws_geo_nrm 
			: -ws_geo_nrm;
}
