#include "zp_cpp/gpu.hpp"

// ====================================================================================================================
// ====================================================================================================================
// ====================================================================================================================
// ====================================================================================================================
void zp::gpu::DeviceLocalImageArray::init(VkDevice vk_dev, VkPhysicalDevice vk_phys_dev, uint32_t max_count)
{
    MAX_COUNT = max_count;

    images.resize(max_count);

    for (auto&& image : images)
    {
        image.init(vk_dev, vk_phys_dev, 1, 1, 4, 1, 1, VK_FORMAT_R8G8B8A8_SRGB, VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT, VK_IMAGE_ASPECT_COLOR_BIT, {0});
    }
}

// ====================================================================================================================
// ====================================================================================================================
// ====================================================================================================================
// ====================================================================================================================
std::vector<VkDescriptorImageInfo> zp::gpu::DeviceLocalImageArray::desc_infos(VkImageLayout img_layout)
{
    std::vector<VkDescriptorImageInfo> infos = {};

    for (auto&& image : images)
    {
        infos.push_back(image.desc_info(img_layout));
    }

    return infos;
}

// ====================================================================================================================
// ====================================================================================================================
// ====================================================================================================================
// ====================================================================================================================
zp::gpu::DeviceLocalImage* zp::gpu::DeviceLocalImageArray::get(uint32_t idx)
{
    return &images[idx];
}